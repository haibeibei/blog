[{"title":"闲谈三两句","date":"2017-08-02T14:23:57.255Z","path":"2017/08/02/无题/","text":"一点感想马上要辞掉工作去寻找新的工作，还是怀抱着憧憬的，毕竟谁都想要工资能够随着自己技能的提升有所提升的。在过去的日子里，感觉学到了很多新的东西。希望接下来的日子能找到一个满意的工作。","comments":true,"tags":[{"name":"随笔","slug":"随笔","permalink":"https://haibeibei.github.io/tags/随笔/"}]},{"title":"express web开发常用代码","date":"2017-08-01T16:00:17.000Z","path":"2017/08/02/express web开发常用代码/","text":"处理普通post请求12345678const bodyParser = require('body-parser');// parse application/x-www-form-urlencodedapp.use(bodyParser.urlencoded(&#123;extended: false&#125;));// parse application/jsonapp.use(bodyParser.json());app.post('/',(req,res)=&gt;&#123; console.log(req.body);&#125;) 处理session1234567891011121314151617const session = require('express-session');app.use(session(&#123; secret: 'keyboard cat', resave: false, saveUninitialized: true&#125;));app.get('/logincheck',(req,res)=&gt;&#123; req.session.login = true;&#125;)// 中间件app.use('/admin',(req,res,next)=&gt;&#123; if(req.seesion.login)&#123; next(); &#125;else&#123; res.redirct('/login'); &#125;&#125;) 上传文件12345678910111213141516171819const fs = require('fs');const async = require('async');const multer = require('multer');const upload = multer(&#123;dest: 'uploads/'&#125;);app.post('/upload', upload.single('wangEditorH5File'), function (req, res) &#123; async.series([ function (callback) &#123; fs.createReadStream(req.file.path).pipe(fs.createWriteStream('public/imgs/' + req.file.originalname)); callback(null); &#125;, function (callback) &#123; fs.unlink(path.resolve(req.file.path)); callback(null); &#125; ], function () &#123; res.end('/imgs/' + req.file.originalname); &#125;);&#125;); react富文本编辑器组件12345678910111213&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/wangEditor.min.css&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;page&quot;&gt;&lt;/div&gt;&lt;script src=&quot;js/jquery-2.2.1.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;js/wangEditor.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;/js/admin.js&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 123456789101112131415161718192021222324252627282930const React = require(&apos;react&apos;);const ReactDOM = require(&apos;react-dom&apos;);class Editor extends React.Component &#123; constructor(props) &#123; super(props); this.getContents = this.getContents.bind(this); &#125; componentDidMount() &#123; this.editor = new window.wangEditor(this.el); this.editor.config.uploadImgUrl = &apos;/upload&apos;; this.editor.create(); // 初始化内容 this.editor.$txt.html(&apos;&lt;div&gt;this is a a&lt;/div&gt;&apos;); &#125; getContents() &#123; console.log(this.editor.$txt.html()); &#125; render() &#123; return ( &lt;div&gt; &lt;div contentEditable=&quot;true&quot; style= ref=&#123;(el)=&gt;&#123;this.el = el&#125;&#125;&gt;&lt;/div&gt; &lt;div onClick=&#123;this.getContents&#125;&gt;获取内容&lt;/div&gt; &lt;/div&gt; ); &#125;&#125;ReactDOM.render(&lt;Editor/&gt;, document.querySelector(&apos;#page&apos;)); 创建md51234const crypto = require(&apos;crypto&apos;);const hash = crypto.createHash(&apos;md5&apos;);hash.update(&apos;123456&apos;);console.log(hash.digest(&apos;hex&apos;)); mysql封装12345678910111213141516171819const mysql = require(&apos;mysql&apos;);const pool = mysql.createPool(&#123; connectionLimit: 1000, host: &apos;localhost&apos;, user: &apos;root&apos;, password: &apos;root&apos;, database: &apos;music&apos;&#125;);function query(sql, arr, fn) &#123; pool.getConnection((err, con)=&gt; &#123; con.query(sql, arr, (err, res)=&gt; &#123; con.release(); fn(err, res); &#125;) &#125;)&#125;module.exports = &#123; query: query&#125;; 防止意外退出123process.on(&apos;uncaughtException&apos;, (ex)=&gt; &#123; console.log(&apos;error&apos;);&#125;); react项目中使用fetch123456789101112131415161718192021// npm install whatwg-fetch --save// 在html页面中引入whatwg-fetch.js// fetch上传文件var input = document.querySelector(&apos;input[type=&quot;file&quot;]&apos;)var data = new FormData()data.append(&apos;file&apos;, input.files[0])data.append(&apos;user&apos;, &apos;hubot&apos;)fetch(&apos;/avatars&apos;, &#123; method: &apos;POST&apos;, body: data&#125;)// fetch提交表单var form = document.querySelector(&apos;form&apos;)fetch(&apos;/users&apos;, &#123; method: &apos;POST&apos;, body: new FormData(form)&#125;) 转载自马彦龙老师的博客.","comments":true,"tags":[{"name":"博客","slug":"博客","permalink":"https://haibeibei.github.io/tags/博客/"}]}]